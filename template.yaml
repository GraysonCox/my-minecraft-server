---

Transform: AWS::LanguageExtensions

Parameters:
  DomainName:
    Type: String
    NoEcho: true
  HostedZoneId:
    Type: String
    NoEcho: true
  ImageId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-x86_64
  ServerPort:
    Type: String
    Default: 25565
  WorldBackupS3BucketName:
    Type: String

Resources:
  Role:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref AWS::StackName
      Path: /
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: allow-everything
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action: '*'
                Resource: '*'

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref Role

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH and Minecraft connections
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref ServerPort
          ToPort: !Ref ServerPort
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  Ec2Instance:
    Type: AWS::EC2::Instance
    CreationPolicy:
      ResourceSignal:
        Timeout: PT5M
    Metadata:
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: !Ref Role
          buckets: !Ref WorldBackupS3BucketName
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              java-21-amazon-corretto-headless: []
          sources:
            /minecraft-stuff/the-world: !Sub https://s3.amazonaws.com/${WorldBackupS3BucketName}/world.tar.gz
          files:
            /etc/systemd/system/minecraft-server.service:
              content: |
                [Unit]
                Description=Minecraft Server
                Wants=network-online.target

                [Service]
                User=root
                WorkingDirectory=/minecraft-stuff
                ExecStart=/minecraft-stuff/start.sh
                ExecStop=/minecraft-stuff/stop.sh ; /minecraft-stuff/back-up.sh
                StandardInput=null

                [Install]
                WantedBy=multi-user.target
            /minecraft-stuff/eula.txt:
              content: eula=true
            /minecraft-stuff/ops.json:
              content:
                Fn::ToJsonString:
                  - uuid: f0c68dad-2cef-405c-a506-4caa8ec05767
                    name: RadGrayson
                    level: 4
                    bypassesPlayerLimit: true
            /minecraft-stuff/server.jar:
              source: https://piston-data.mojang.com/v1/objects/7bf95409b0d9b5388bfea3704ec92012d273c14c/server.jar
            /minecraft-stuff/server.properties:
              content: !Sub |
                #Minecraft server properties
                accepts-transfers=false
                allow-flight=false
                allow-nether=true
                broadcast-console-to-ops=true
                broadcast-rcon-to-ops=true
                bug-report-link=
                difficulty=normal
                enable-command-block=false
                enable-jmx-monitoring=false
                enable-query=false
                enable-rcon=false
                enable-status=true
                enforce-secure-profile=true
                enforce-whitelist=false
                entity-broadcast-range-percentage=100
                force-gamemode=false
                function-permission-level=2
                gamemode=survival
                generate-structures=true
                generator-settings={}
                hardcore=false
                hide-online-players=false
                initial-disabled-packs=
                initial-enabled-packs=vanilla
                level-name=the-world
                level-seed=
                level-type=minecraft\:normal
                log-ips=true
                max-chained-neighbor-updates=1000000
                max-players=20
                max-tick-time=60000
                max-world-size=29999984
                motd=Trip safely.
                network-compression-threshold=256
                online-mode=true
                op-permission-level=4
                pause-when-empty-seconds=60
                player-idle-timeout=0
                prevent-proxy-connections=false
                pvp=true
                query.port=${ServerPort}
                rate-limit=0
                rcon.password=
                rcon.port=25575
                region-file-compression=deflate
                require-resource-pack=false
                resource-pack=
                resource-pack-id=
                resource-pack-prompt=
                resource-pack-sha1=
                server-ip=
                server-port=${ServerPort}
                simulation-distance=100
                spawn-monsters=true
                spawn-protection=16
                sync-chunk-writes=true
                text-filtering-config=
                text-filtering-version=0
                use-native-transport=true
                view-distance=100
                white-list=false
            /minecraft-stuff/start.sh:
              content: |
                #!/bin/bash
                java -Xmx1300M -Xms1300M -jar server.jar nogui
              mode: 000555
            /minecraft-stuff/stop.sh:
              content: |
                #!/bin/bash
                kill -9 $(ps -ef | pgrep -f 'java')
              mode: 000555
            /minecraft-stuff/back-up.sh:
              content: !Sub |
                #!/bin/bash
                tar -czvf world.tar.gz -C the-world .
                aws s3 cp world.tar.gz s3://${WorldBackupS3BucketName}/world.tar.gz
              mode: 000555
          services:
            systemd:
              minecraft-server:
                enabled: true
                ensureRunning: true
    Properties:
      InstanceType: t3.medium
      ImageId: !Ref ImageId
      IamInstanceProfile: !Ref InstanceProfile
      SecurityGroups:
        - !Ref SecurityGroup
      Monitoring: true
      Tags:
        - Key: Name
          Value: !Ref AWS::StackName
      UserData:
        Fn::Base64:
          !Sub
          - |
            #!/bin/bash
            cfn-init -v --stack ${stack_name} --resource Ec2Instance --region ${region}
            cfn-signal -e $? --stack ${stack_name} --resource Ec2Instance --region ${region}
          - stack_name: !Ref AWS::StackName
            region: !Ref AWS::Region

  Route53RecordSetGroup:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId: !Ref HostedZoneId
      RecordSets:
        - Name: !Sub minecraft.${DomainName}
          Type: A
          TTL: 30
          ResourceRecords:
            - !GetAtt Ec2Instance.PublicIp
        - Name: !Sub minecraft.${DomainName}
          Type: SRV
          TTL: 30
          ResourceRecords:
            - !Sub 1 0 ${ServerPort} minecraft.${DomainName}
