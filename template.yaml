---

Parameters:
  ImageId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-x86_64

Resources:
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Ref AWS::StackName
      RetentionInDays: 90

  KeyPair:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyName: !Ref AWS::StackName

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP and RDP
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  ElasticIp:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !Ref Ec2Instance

  Ec2Instance:
    Type: AWS::EC2::Instance
    CreationPolicy:
      ResourceSignal:
        Timeout: PT5M
    Metadata:
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              java-21-amazon-corretto-headless: []
          files:
            /etc/systemd/system/minecraft-server.service:
              content: |
                [Unit]
                Description=Minecraft Server
                Wants=network-online.target

                [Service]
                User=root
                WorkingDirectory=/minecraft-stuff
                ExecStart=java -Xmx1300M -Xms1300M -jar server.jar nogui
                ExecStop=kill -9 $(ps -ef | pgrep -f "java")
                StandardInput=null

                [Install]
                WantedBy=multi-user.target
            /minecraft-stuff/eula.txt:
              content: eula=true
            /minecraft-stuff/server.jar:
              source: https://piston-data.mojang.com/v1/objects/7bf95409b0d9b5388bfea3704ec92012d273c14c/server.jar
          services:
            systemd:
              minecraft-server:
                enabled: true
                ensureRunning: true
    Properties:
      InstanceType: t3.small
      ImageId: !Ref ImageId
      SecurityGroups:
        - !Ref SecurityGroup
      KeyName: !Ref KeyPair
      Monitoring: true
      Tags:
        - Key: Name
          Value: !Ref AWS::StackName
      UserData:
        Fn::Base64:
          !Sub
          - |
            #!/bin/bash
            cfn-init -v --stack ${stack_name} --resource Ec2Instance --region ${region}
            cfn-signal -e $? --stack ${stack_name} --resource Ec2Instance --region ${region}
          - stack_name: !Ref AWS::StackName
            region: !Ref AWS::Region
